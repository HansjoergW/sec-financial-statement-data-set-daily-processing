 1. [ok] subfolder in src "secdaily" mit allem code
 2. [ok] pyproject toml entsprechend setzen (packages definition)
 3. [ok] test folder nach tests umbenennen
 4. [ok] tests_ext nach sandbox umbenennen
 5. [ok] .vscode/settings.json für tests korrekt konfigurieren
     {
         "python.testing.pytestArgs": [
             "tests", "sandbox"
         ],
         "python.testing.unittestEnabled": false,
         "python.testing.pytestEnabled": true
     }
 7. [ok] definieren einer neuen conda umgebung
 8. [ok] definieren der notwendigen dependencies im pyproject.toml, bis ausführung läuft
 9. [ok] sicherstellen, dass alle normlan tests wieder laufen
10. [ok] Optimierung failed downloads
       [ok] manage process index -> default values
       [ok] copy to processing -> correct übernehmen
       [ok] selection for missing download -> nicht übernehmen, falls url empty
11. [ok] implement "to csv" logic für label daten
       -> achtung, ist text -> muss spezielle delimiter verwenden.
          oder dann mit quotes arbeiten

12. [ok] neuen step hinzufügen, der aus den raw csv files die finallen SEC-Formatted style macht
      [ok] rewrite parsint lab, so that key contains tag/version/laybeltype
      [ok] create map from lab infos to lookup plabel for pre 
      [ok] labels are stripped of single quotes, maybe also other content

14. [ok] einzelner PRE und NUM Test mit soll / ist vergleich 
   - [ok] plabel sollte gleich sein
     - [ok] download label files
     - [ok] prozess label files

15. [ok] es wird alles noch mit index geschrieben .. 

16. [] Mass Test für Q4/2024 
      [ok] DB setup / dataclass und write logik schreiben
      [ok] db daten für einzelnes adsh bereitstellen und in db speichern
      [ok] logik um gesammtes quartel zu vergleichen und zu loggen
      [ok] Auswerten einzelner reports ermöglichen
      [ok] pre vergleich -> ohne line und report
      [] auswerten des quartals -> MassTestTable neu anlegen
      [] Übersichts report erstellen und ablegen
      

17  [] create final quarter zip file containing all daily
      [] write final daily files as parquet for more efficient concatenation
      [] concat existing parquets into single parquet
      [] create final zip file

18. [] activate project / create official 0.1 release
      [] activate build pipeline with linting and tests
      [] activate deployment to pypi
      [] adapt readme / add limitations




xx. [] Verbessern der Ergebnisse, falls möglich und nötig

xx. [] Superklasse für processing steps mit basis Verzeichnissen und errorlogging

xx. [] single file processing
      [] strip html file
      [] analyse html file and available xml-file -> where is the data coming from to create pre?


 - Zuerst müssen die Vergleichstests korrekt laufen / basierend auf einem aktuellen quarter
   -> detail vergleich einer einzelnen adsh nummer
   -> adshs vergleich quartal
   -> detail vergleich ganzes quartal

- wie gehen wir mit Reports um, die nur ein "ins" file haben?  

- git workflow aktivieren
- sqlite db setup überlegen -> wie bei secfsdstools
  logik ist immer im Sinne "IF NOT EXISTS"



#    labels: defaultdict = field(default_factory=lambda: defaultdict(str))
